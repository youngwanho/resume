{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_swiper_slide = _resolveComponent(\"swiper-slide\");\n  const _component_swiper = _resolveComponent(\"swiper\", true);\n  return _openBlock(), _createBlock(_component_swiper, {\n    modules: [$setup.Virtual],\n    \"slides-per-view\": 3,\n    \"space-between\": 50,\n    virtual: \"\"\n  }, {\n    default: _withCtx(() => [(_openBlock(), _createElementBlock(_Fragment, null, _renderList(4, (slideContent, index) => {\n      return _createVNode(_component_swiper_slide, {\n        key: index,\n        virtualIndex: index\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(slideContent), 1 /* TEXT */)]),\n\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"virtualIndex\"]);\n    }), 64 /* STABLE_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modules\"]);\n}","map":{"version":3,"names":["_createBlock","_component_swiper","modules","$setup","Virtual","virtual","_createElementBlock","_Fragment","_renderList","slideContent","index","_createVNode","_component_swiper_slide","key","virtualIndex"],"sources":["/Users/mac/Desktop/vue/vue-project/src/components/views/Swiper.vue"],"sourcesContent":["<template>\n  <swiper :modules=\"[Virtual]\" :slides-per-view=\"3\" :space-between=\"50\" virtual>\n    <swiper-slide\n      v-for=\"(slideContent, index) in 4\"\n      :key=\"index\"\n      :virtualIndex=\"index\"\n      >{{slideContent}}</swiper-slide\n    >\n  </swiper>\n</template>\n<script>\n  import { Virtual } from 'swiper';\n  import { Swiper, SwiperSlide } from 'swiper/vue';\n\n  export default {\n    components: {\n      Swiper,\n      SwiperSlide,\n    },\n\n    setup() {\n      // Create array with 1000 slides\n      const slides = Array.from({ length: 1000 }).map(\n        (el, index) => `Slide ${index + 1}`\n      );\n      return {\n        slides,\n        Virtual,\n      };\n    },\n  };\n</script>\n"],"mappings":";;;;uBACEA,YAAA,CAOSC,iBAAA;IAPAC,OAAO,GAAGC,MAAA,CAAAC,OAAO;IAAI,iBAAe,EAAE,CAAC;IAAG,eAAa,EAAE,EAAE;IAAEC,OAAO,EAAP;;sBAElE,MAAkC,E,cADpCC,mBAAA,CAKCC,SAAA,QAAAC,WAAA,CAJiC,CAAC,GAAzBC,YAAY,EAAEC,KAAK;aAD7BC,YAAA,CAKCC,uBAAA;QAHEC,GAAG,EAAEH,KAAK;QACVI,YAAY,EAAEJ;;0BACd,MAAgB,C,kCAAdD,YAAY,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}